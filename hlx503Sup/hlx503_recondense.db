## Status of recondense

record(bi, "$(P)RECONDENSING") {
    field(DESC, "Is hlx503 recondensing currently")
    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(bo, "$(P)RECONDENSING:SP") {
    field(DESC, "Is hlx503 recondensing currently")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(UDFS, "NO_ALARM")
}

record(mbbo, "$(P)RECONDENSE:PART") {
    field(DESC, "The part of the recondense we are on")

    field(ZRVL, "0")
    field(ZRST, "NOT RECONDENSING")

    field(ONVL, "1")
    field(ONST, "PART 1")

    field(TWVL, "2")
    field(TWST, "PART 2")

    field(THVL, "3")
    field(THST, "PART 3")

    field(FRVL, "4")
    field(FRST, "FINISHING")

    field(UDFS, "NO_ALARM")
}

record(bo, "$(P)RECONDENSE:TIMED_OUT") {
    field(DESC, "Did the last recondense time out")

    field(ZNAM, "NO")
    field(ONAM, "YES")

    field(UDFS, "NO_ALARM")
}

record(bi, "$(P)RECONDENSE:SKIPPED") {
    field(DESC, "Has the recondense part been skipped")

    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(bo, "$(P)RECONDENSE:SKIPPED:SP") {
    field(DESC, "Set if the recondense part was skipped")

    field(ZNAM, "NO")
    field(ONAM, "YES")

    field(UDFS, "NO_ALARM")
}

record(bi, "$(P)RECONDENSE:CANCELLED") {
    field(DESC, "Has the recondense part been cancelled")

    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(bo, "$(P)RECONDENSE:CANCELLED:SP") {
    field(DESC, "Set the recondense part to cancelled")

    field(ZNAM, "NO")
    field(ONAM, "YES")

    field(UDFS, "NO_ALARM")
}

## Temperature to set after the recondense is complete

record(ao, "$(P)RECONDENSE:TEMP:SP") {
    field(DESC, "Temp setpoint to set after recondense")
    field(SCAN, "Passive")

    field(HIHI, "$(MAX_OPERATING_TEMP_FOR_HELIOX)")
    field(HHSV, "MAJOR")

    field(HIGH, "$(MAX_TEMP_FOR_HE3_COOLING)")
    field(HSV, "MINOR")

    field(PREC, "4")
    field(EGU, "K")

    field(UDFS, "NO_ALARM")
}

record(calcout, "$(P)RECONDENSE:TEMP:SP:_CALC") {
    field(DESC, "Calc temp to set after recondense")
    field(SCAN, "Passive")

    field(INPA, "$(P)RECONDENSE:TEMP:SP CP MS")
    field(CALC, "A < $(MAX_TEMP_FOR_HE3_COOLING)? A : $(DEFAULT_POST_CONDENSE_TEMP_SETPOINT)")

    field(OUT, "$(P)RECONDENSE:TEMP:SP:RBV PP")
}

record(ai, "$(P)RECONDENSE:TEMP:SP:RBV") {
    field(DESC, "Temp to set after recondense")
    field(SCAN, "Passive")

    field(VAL, "$(DEFAULT_POST_CONDENSE_TEMP_SETPOINT)")

    field(PREC, "4")
    field(EGU, "K")

    field(UDFS, "NO_ALARM")
}

# Sorb recondense values

record(ao, "$(P)RECONDENSE:SORB:TEMP:SP") {
    field(DESC, "Temp set for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_TEMP_SET)")

    field(PREC, "4")
    field(EGU, "K")

    field(OUT, "$(P)RECONDENSE:SORB:TEMP:SP:RBV")
}

record(ai, "$(P)RECONDENSE:SORB:TEMP:SP:RBV") {
    field(DESC, "Temp set for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_TEMP_SET)")

    field(PREC, "4")
    field(EGU, "K")
}

record(ao, "$(P)RECONDENSE:SORB:TEMP:FINAL:SP") {
    field(DESC, "Final temp target for sorb recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_TEMP_FINAL)")

    field(PREC, "4")
    field(EGU, "K")

    field(OUT, "$(P)RECONDENSE:SORB:TEMP:FINAL:SP:RBV")
}

record(ai, "$(P)RECONDENSE:SORB:TEMP:FINAL:SP:RBV") {
    field(DESC, "Final temp target for sorb recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_TEMP_FINAL)")

    field(PREC, "4")
    field(EGU, "K")
}

record(ao, "$(P)RECONDENSE:SORB:P:SP") {
    field(DESC, "Proportional for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_P)")

    field(PREC, "1")
    field(EGU, "")

    field(OUT, "$(P)RECONDENSE:SORB:P:SP:RBV")
}

record(ai, "$(P)RECONDENSE:SORB:P:SP:RBV") {
    field(DESC, "Proportional for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_P)")

    field(PREC, "1")
    field(EGU, "")
}

record(ao, "$(P)RECONDENSE:SORB:I:SP") {
    field(DESC, "Integral for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_I)")

    field(PREC, "1")
    field(EGU, "")

    field(OUT, "$(P)RECONDENSE:SORB:I:SP:RBV")
}

record(ai, "$(P)RECONDENSE:SORB:I:SP:RBV") {
    field(DESC, "Integral for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_I)")

    field(PREC, "1")
    field(EGU, "")
}

record(ao, "$(P)RECONDENSE:SORB:D:SP") {
    field(DESC, "Derivative for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_D)")

    field(PREC, "1")
    field(EGU, "")

    field(OUT, "$(P)RECONDENSE:SORB:D:SP:RBV")
}

record(ai, "$(P)RECONDENSE:SORB:D:SP:RBV") {
    field(DESC, "Derivative for sorb in recondense")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_SORB_D)")

    field(PREC, "1")
    field(EGU, "")
}

## Recondense He3Pot targets

record(ao, "$(P)RECONDENSE:HE3POT:TEMP:PART1:SP") {
    field(DESC, "Target for He3Pot temp in part 1")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_HE3POT_TARGET_TEMP_PART1)")

    field(PREC, "4")
    field(EGU, "K")

    field(OUT, "$(P)RECONDENSE:HE3POT:TEMP:PART1")
}

record(ai, "$(P)RECONDENSE:HE3POT:TEMP:PART1") {
    field(DESC, "Target for He3Pot temp in part 1")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_HE3POT_TARGET_TEMP_PART1)")

    field(PREC, "4")
    field(EGU, "K")
}

record(ao, "$(P)RECONDENSE:HE3POT:TEMP:PART2:SP") {
    field(DESC, "Target for He3Pot temp in part 2")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_HE3POT_TARGET_TEMP_PART2)")

    field(PREC, "4")
    field(EGU, "K")

    field(OUT, "$(P)RECONDENSE:HE3POT:TEMP:PART2")
}

record(ai, "$(P)RECONDENSE:HE3POT:TEMP:PART2") {
    field(DESC, "Target for He3Pot temp in part 2")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_HE3POT_TARGET_TEMP_PART2)")

    field(PREC, "4")
    field(EGU, "K")
}

## Time to wait after part 2

record(longout, "$(P)RECONDENSE:PART2:WAIT_TIME:SP") {
    field(DESC, "Time to wait in seconds after part 2")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_POST_PART2_WAIT_TIME)")

    field(EGU, "seconds")

    field(OUT, "$(P)RECONDENSE:PART2:WAIT_TIME")
}

record(longin, "$(P)RECONDENSE:PART2:WAIT_TIME") {
    field(DESC, "Time to wait in seconds after part 2")
    field(SCAN, "Passive")

    field(VAL, "$(RECONDENSE_POST_PART2_WAIT_TIME)")

    field(EGU, "seconds")
}
